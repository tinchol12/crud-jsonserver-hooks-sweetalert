{"version":3,"sources":["components/Header.js","components/Producto.js","components/ProductoLista.js","components/Productos.js","components/Error.js","components/EditarProducto.js","components/AgregarProducto.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","activeClassName","Producto","ProductoLista","producto","guardarRecargarProductos","data-categoria","categoria","nombrePlato","precioPlato","id","type","onClick","console","log","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","a","async","value","url","axios","delete","status","Productos","productos","map","key","Error","mensaje","withRouter","props","history","precioPlatoRef","useRef","nombrePlatoRef","useState","guardarCategoria","error","guardarError","leerValorRadio","e","target","onSubmit","preventDefault","nuevoNombre","current","nuevoPrecio","categoriaPlato","editarPlato","put","resultado","push","name","placeholder","ref","defaultValue","onChange","defaultChecked","guardarNombre","guardarPrecio","post","App","guardarProductos","recargarProductos","useEffect","get","data","consultarAPI","exact","path","render","idProducto","parseInt","match","params","filter","EditarProducto","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7949357.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink  } from 'react-router-dom';\r\nconst Header = () => (\r\n\r\n            <nav className=\"navbar navbar-expand-lg nav-bar bg-dark\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/productos\" className=\"navbar-brand\">\r\n                            React CRUD & Routing\r\n                    </Link>\r\n\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink \r\n                                    to='/productos'\r\n                                    className=\"nav-link\"\r\n                                    activeClassName=\"active\"\r\n                            >Productos</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink \r\n                                    to='nuevo-producto'\r\n                                    className=\"nav-link\"\r\n                                    activeClassName=\"active\"\r\n                            >Nuevo Producto</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Producto()\r\n{\r\n    return (\r\n        <h1 className=\"text-center\"> Datos del producto </h1>\r\n    )\r\n}\r\n\r\nexport default Producto;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction ProductoLista({producto,guardarRecargarProductos})\r\n{\r\n\r\n    const eliminarProducto = id =>\r\n    {\r\n        console.log('Eliminando',id);\r\n\r\n        Swal.fire({\r\n            title: 'Estas seguro de querer eliminar?',\r\n            text: \"Una vez eliminado no se puede recuperar\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar!',\r\n            cancelButtonText: 'Cancelar'\r\n          }).then(async (result) => {\r\n            if (result.value) \r\n            {\r\n                try\r\n                {\r\n                    const url = `http://localhost:4000/restaurant/${id}`;                \r\n                    const resultado = await axios.delete(url);                    \r\n                    if(resultado.status === 200)\r\n                    {\r\n                        Swal.fire(\r\n                            'Eliminado!',\r\n                            'Su registro ha sido eliminado.',\r\n                            'success'\r\n                        )\r\n                        guardarRecargarProductos(true);\r\n                    }                    \r\n                }\r\n                catch (error)\r\n                {\r\n                    console.log(error);\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error...',\r\n                        text: 'Hubo un error!'\r\n                      })\r\n                }\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n    return (\r\n        <li data-categoria={producto.categoria} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            <p>\r\n                {producto.nombrePlato} {' '}\r\n                <span className=\"font-weight-bold\">${producto.precioPlato}</span>\r\n            </p>\r\n\r\n            <div>\r\n                <Link\r\n                    to={`/productos/editar/${producto.id}`}\r\n                    className=\"btn btn-success mr-2\"\r\n                    > Editar </Link>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => eliminarProducto(producto.id)}\r\n                >Eliminar &times</button>\r\n\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nexport default ProductoLista;","import React, { Fragment } from 'react';\r\nimport ProductoLista from './ProductoLista';\r\n\r\nfunction Productos({productos, guardarRecargarProductos})\r\n{\r\n    return (\r\n        <Fragment>\r\n                 <h1 className=\"text-center\"> Productos </h1>\r\n                 <ul className=\"list-group mt-5\">\r\n                     {productos.map(producto => (\r\n                        <ProductoLista \r\n                            key={producto.id}\r\n                            producto={producto}\r\n                            guardarRecargarProductos={guardarRecargarProductos}\r\n                        />\r\n                     ))}\r\n                 </ul>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Productos;","import React from 'react';\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className=\"alert alert-danger p3 my-5 text-center text-uppercase font-weight-bold\"> {mensaje} </p>\r\n);\r\n\r\nexport default Error;","import React, {useState, useRef} from 'react';\r\nimport Error from './Error';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction EditarProductos(props)\r\n{    \r\n    //destructuring de props\r\n    const {history, producto, guardarRecargarProductos} = props\r\n\r\n    //Generamos los REF\r\n    const precioPlatoRef = useRef('');\r\n    const nombrePlatoRef = useRef('');\r\n\r\n    \r\n    const [categoria, guardarCategoria] = useState('');\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const leerValorRadio = e =>\r\n    {\r\n        guardarCategoria(e.target.value);\r\n    }\r\n\r\n    const editarProducto = async e => {\r\n        e.preventDefault();\r\n\r\n        //validacion\r\n        const nuevoNombre = nombrePlatoRef.current.value,\r\n              nuevoPrecio = precioPlatoRef.current.value\r\n\r\n        if(nuevoNombre === '' || nuevoPrecio === '' || categoria === '')\r\n        {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        //revisar si cambio la categoria, de lo contrario asignar el mismo valor.\r\n        let categoriaPlato = (categoria === '') ? producto.categoria : categoria;\r\n\r\n        //obtenemos los nuevos valores del formulario\r\n        const editarPlato = {\r\n            precioPlato : nuevoPrecio,\r\n            nombrePlato : nuevoNombre,\r\n            categoria : categoriaPlato\r\n        }\r\n\r\n        //Enviar el Request al API\r\n        const url = `http://localhost:4000/restaurant/${producto.id}`;\r\n\r\n        try\r\n        {\r\n            const resultado = await axios.put(url, editarPlato);\r\n            console.log(resultado);\r\n\r\n            if(resultado.status === 200)\r\n            {\r\n                Swal.fire(\r\n                    'Producto Editado!',\r\n                    'El producto se ha editado correctamente.',\r\n                    'success'\r\n                  )\r\n            }\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error...',\r\n                text: 'Hubo un error!'\r\n              })\r\n        }\r\n        \r\n        //redirigir al usuario y consultar a la api    \r\n        guardarRecargarProductos(true);\r\n        history.push('/productos');\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"col-md-8 mx-auto \">\r\n            <h1 className=\"text-center\">Editar Producto</h1>\r\n\r\n        {(error) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n            <form\r\n                className=\"mt-5\"\r\n                onSubmit={editarProducto}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Nombre Platillo</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"nombre\" \r\n                        placeholder=\"Nombre Platillo\"\r\n                        ref={nombrePlatoRef}\r\n                        defaultValue={producto.nombrePlato}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Precio Platillo</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        className=\"form-control\" \r\n                        name=\"precio\"\r\n                        placeholder=\"Precio Platillo\"\r\n                        ref={precioPlatoRef}\r\n                        defaultValue={producto.precioPlato}\r\n                    />\r\n                </div>\r\n\r\n                <legend className=\"text-center\">Categoría:</legend>\r\n                <div className=\"text-center\">\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"postre\"\r\n                        onChange={leerValorRadio}\r\n                        defaultChecked={(producto.categoria === 'postre')}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Postre\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"bebida\"\r\n                        onChange={leerValorRadio}\r\n                        defaultChecked={(producto.categoria === 'bebida')}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Bebida\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"cortes\"\r\n                        onChange={leerValorRadio}\r\n                        defaultChecked={(producto.categoria === 'cortes')}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Cortes\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"ensalada\"\r\n                        onChange={leerValorRadio}\r\n                        defaultChecked={(producto.categoria === 'ensalada')}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Ensalada\r\n                    </label>\r\n                </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"font-weight-bold text-uppercase mt-5 btn btn-primary btn-block py-3\" value=\"Editar Producto\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(EditarProductos);","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction AgregarProducto({history, guardarRecargarProductos})\r\n{\r\n    const [nombrePlato, guardarNombre] = useState('');\r\n    const [precioPlato, guardarPrecio] = useState('');\r\n    const [categoria, guardarCategoria] = useState('');\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //LEER LA OPCION \r\n    const leerValorRadio = e =>\r\n    {\r\n        guardarCategoria(e.target.value);\r\n    }\r\n\r\n    //CREAR NUEVO PRODUCTO\r\n    const agregarProducto = async e => \r\n    {\r\n        e.preventDefault();\r\n\r\n        if(nombrePlato === '' || precioPlato === '' || categoria === '' )\r\n        {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //CREAR NUEVO PRODUCTO\r\n        try \r\n        {\r\n            const resultado = await axios.post('http://localhost:4000/restaurant',\r\n            {\r\n                nombrePlato,precioPlato,categoria\r\n            });\r\n            if(resultado.status === 201)\r\n            {\r\n                Swal.fire(\r\n                    'Producto Creado!',\r\n                    'El producto se ha creado correctamente.',\r\n                    'success'\r\n                  )\r\n            }\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error...',\r\n                text: 'Hubo un error!'\r\n              })\r\n        }\r\n\r\n        //REDIRIGIR A LOS USUARIOS\r\n        guardarRecargarProductos(true);\r\n        history.push('/productos');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-8 mx-auto \">\r\n            <h1 className=\"text-center\">Agregar Nuevo Producto</h1>\r\n\r\n        {(error) ? <Error mensaje='Todos los campos son obligatorios' /> : null}\r\n\r\n            <form\r\n                className=\"mt-5\"\r\n                onSubmit={agregarProducto}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Nombre Platillo</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"nombre\" \r\n                        placeholder=\"Nombre Platillo\"\r\n                        onChange={e => guardarNombre(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Precio Platillo</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        className=\"form-control\" \r\n                        name=\"precio\"\r\n                        placeholder=\"Precio Platillo\"\r\n                        onChange={e => guardarPrecio(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <legend className=\"text-center\">Categoría:</legend>\r\n                <div className=\"text-center\">\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"postre\"\r\n                        onChange={leerValorRadio}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Postre\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"bebida\"\r\n                        onChange={leerValorRadio}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Bebida\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"cortes\"\r\n                        onChange={leerValorRadio}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Cortes\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"radio\" \r\n                        name=\"categoria\"\r\n                        value=\"ensalada\"\r\n                        onChange={leerValorRadio}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                        Ensalada\r\n                    </label>\r\n                </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"font-weight-bold text-uppercase mt-5 btn btn-primary btn-block py-3\" value=\"Agregar Producto\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AgregarProducto);\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Header from './components/Header';\n\n\nimport Producto from './components/Producto';\nimport Productos from './components/Productos';\nimport EditarProducto from './components/EditarProducto';\nimport AgregarProducto from './components/AgregarProducto';\n\nfunction App() {\n\n  const [productos, guardarProductos] = useState([]);\n  const [recargarProductos, guardarRecargarProductos] = useState(true);\n\n\n\n  useEffect(() =>\n                  {\n                      if(recargarProductos)\n                      {\n                        const consultarAPI = async () =>\n                        {\n                           const resultado = await axios.get('http://localhost:4000/restaurant');\n                           guardarProductos(resultado.data); \n                        }\n                        consultarAPI();\n                        //cambiar estado de recarga\n                        guardarRecargarProductos(false);\n                      }\n                  }, [recargarProductos]);\n\n\n  return (\n            <Router>\n                        <Header />\n                         <main className=\"container mt-5\">\n                            <Switch>\n                                      <Route exact path=\"/productos\" \n                                          render={ () => (\n                                            <Productos \n                                              productos={productos}\n                                              guardarRecargarProductos={guardarRecargarProductos}\n                                            />\n                                          )} \n                                      />\n                                      <Route exact path=\"/nuevo-producto\" \n                                          render={() => (\n                                            <AgregarProducto\n                                            guardarRecargarProductos={guardarRecargarProductos}\n                                            />\n                                          )}/>\n                                      <Route exact path=\"/productos/editar/:id\" \n                                          render={props => {\n                                            //Tomar el ID del producto\n                                            const idProducto = parseInt(props.match.params.id);\n\n                                            //filtrar y pasar el seleccionado\n                                            const producto = productos.filter(producto => producto.id === idProducto);\n\n                                            return(\n                                                    <EditarProducto \n                                                      producto={producto[0]}\n                                                      guardarRecargarProductos={guardarRecargarProductos}\n                                                    />\n                                            ) \n                                          }}    \n                                      />\n                                      \n                                      <Route exact path=\"/productos/:id\" component={Producto} />\n                            </Switch>\n                          </main>\n                        <p className=\"mt-4 p2 text-center\"> Todos los derechos reservados</p>\n            </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}